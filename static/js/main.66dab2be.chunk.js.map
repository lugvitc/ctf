{"version":3,"sources":["components/navbar/navbar.module.css","pages/landing/landing.module.css","components/challengeModal/challengeModal.module.css","components/leaderboardCard/leaderboardCards.module.css","pages/play/play.module.css","components/popAlert/popalert.module.css","pages/landing/animateDL/animateDl.module.css","components/errorModals/errorModal.module.css","components/challengeCard/challengeCard.module.css","components/footer/footer.module.css","pages/landing/lug.png","pages/landing/vit.png","pages/landing/technovit.png","pages/landing/qr2.png","pages/landing/ideassion.png","components/footer/footer.js","hooks/useFetch.js","hooks/useTeam.js","components/navbar/navbar.js","components/gotToTopButton/upArrowIcon.js","components/gotToTopButton/goToTopButton.js","App.js","pages/landing/content.js","components/faq/faq.js","pages/landing/animateDL/animateDL.js","components/errorModals/errorModal.js","pages/landing/landing.js","pages/signup/signup.js","components/loadingAnimation/loadingAnimation.js","pages/login.js","components/popAlert/popAlert.js","components/challengeModal/challengeModal.js","components/challengeCard/challengeCard.js","pages/play/play.js","components/leaderboardCard/leaderboardCards.js","pages/leaderboard.js","pages/team.js","components/loggedInRoute.js","index.js"],"names":["module","exports","all","logos","name","links","link","active","menu","fullScreenNav","section","logoRow","logo","center","sponsors","title","tagline","subtitle","qr","infoCards","dl","schedule","modal","description","header","points","close","hintSpacing","ctfLinks","author","cards","card","position","teamData","userTeam","challenges","playTimePlay","challengesGrid","centerContainer","pointer","flag","pop_alert","visible","hidden","pop_alert_content","pop_alert_message","show","content","body","solved","__webpack_require__","p","Footer","React","createElement","className","styles","target","rel","href","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","useFetch","api","path","init","fetch","apiAsTeam","_ref","_asyncToGenerator","_callee","res","response","data","_context","headers","Authorization","concat","window","localStorage","getItem","Access-Control-Allow-Origin","clone","status","json","access_token","setItem","_x","apply","arguments","apiPostAsTeam","_ref2","_callee2","_context2","JSON","stringify","ok","_x2","_x3","apiPostGetJsonAsTeam","_ref3","_callee3","ans","_context3","_x4","_x5","apiPost","ContentType","teamStore","set","team","setTeam","useTeam","_teamStore","_useFetch","fetchTeam","logoutTeam","to","text","Navbar","_useTeam","_useState","useState","_useState2","_slicedToArray","menuIsVisible","setMenuIsVisible","promptThenLogout","confirm","map","NavLink","isActive","Fragment","currentPoints","onClick","_ref4","_ref5","_ref6","_ref7","_ref8","UpArrowIcon","xmlns","height","viewBox","width","fill","d","GoToTopButton","setShow","useEffect","handleScroll","scrollY","addEventListener","removeEventListener","scrollTo","App","Outlet","Event","Subtitle","Location","Dates","Fees","faqs","q","a","days","day","FaqComponent","props","setActive","contentRef","useRef","current","style","maxHeight","scrollHeight","que","HiArrowSmDown","ref","AnimateDL","dt","dd","dtVisible","setDtVisible","_useState3","_useState4","ddVisible","setDdVisible","dtRef","ddRef","options","root","rootMargin","threshold","comeFromLeft","IntersectionObserver","entries","isIntersecting","comeFromRight","observe","unobserve","ErrorModal","open","Landing","src","vitLogo","technovitLogo","lugLogo","index","s","id","faq","Signup","member1RegNo","member2RegNo","member3RegNo","password","teamValues","setTeamValues","teamValuesAreValid","navigate","useNavigate","submit","e","r1","preventDefault","alert","valid","handleChange","input","_objectSpread","_defineProperty","onSubmit","maxLength","onChange","invalid","LoadingAnimation","Login","user","loginValues","setLoginValues","loading","setLoading","location","useLocation","pathname","PopAlert","message","duration","onClose","setVisible","timer","setTimeout","clearTimeout","myStyle","textDecoration","fontFamily","color","fontSize","marginBottom","paddingRight","backgroundColor","ChallengeModal","challenge","modalRef","questionModalOpen","setQuestionModalOpen","isSolved","qWasCorrect","ques_no","console","log","is_hint","showAlert","setShowAlert","handleShowAlert","inputValue","setInputValue","_useState5","_useState6","hint_1","setHint1","_useState7","_useState8","hint_2","setHint2","_useState9","_useState10","hint_3","setHint3","_useState11","_useState12","_useState13","hint1","hint2","hint3","_useState14","showHints","setShowHints","_useState15","_useState16","_useState17","_useState18","closeQuestionModal","submitFlag","challenge_id","t0","closeIfClickedOutside","grid","created_by","ReactMarkdown","components","assign","item","solvedBy","event","hints","hint","hintText","ChallengeCard","showModal","Play","setChallenges","showSolvedChallenges","setShowSolvedChallenges","fetchChallenges","checkboxContainer","checked","filter","c","includes","LeaderboardCards","teams","sort","b","Date","lastTimeStamp","getTime","t","memberCount","members","Leaderboard","setTeams","fetchLeaderboardData","fetchTeams","refreshInterval","setInterval","clearInterval","Team","m","regNo","LoggedInRoute","children","token","isPossibleValidToken","checkTeam","ReactDOM","createRoot","document","getElementById","render","StrictMode","HashRouter","Routes","Route","element"],"mappings":"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","file":"static/js/main.66dab2be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"navbar_all__1cTtP\",\"logos\":\"navbar_logos__GN5KS\",\"name\":\"navbar_name__AgNWV\",\"links\":\"navbar_links__32AUG\",\"link\":\"navbar_link__3d9Ul\",\"active\":\"navbar_active__1mFgI\",\"menu\":\"navbar_menu__3TGFi\",\"fullScreenNav\":\"navbar_fullScreenNav__2rxxK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"landing_all__21u91\",\"section\":\"landing_section__10nok\",\"logoRow\":\"landing_logoRow__2koJ2\",\"logo\":\"landing_logo__E5lBY\",\"center\":\"landing_center__3PfJm\",\"sponsors\":\"landing_sponsors__3rvUZ\",\"title\":\"landing_title__eHkEA\",\"tagline\":\"landing_tagline__3yy-s\",\"subtitle\":\"landing_subtitle__3BCGg\",\"qr\":\"landing_qr__1V6Dz\",\"infoCards\":\"landing_infoCards__1d9ZD\",\"dl\":\"landing_dl__1xCFk\",\"schedule\":\"landing_schedule__3Djmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"challengeModal_modal__1bk_n\",\"description\":\"challengeModal_description__2WdTi\",\"header\":\"challengeModal_header__2Z5aQ\",\"name\":\"challengeModal_name__oc6q-\",\"points\":\"challengeModal_points__2EZVY\",\"close\":\"challengeModal_close__2L1rs\",\"hintSpacing\":\"challengeModal_hintSpacing__14ntr\",\"ctfLinks\":\"challengeModal_ctfLinks__1A4Wm\",\"author\":\"challengeModal_author__1YPFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"leaderboardCards_cards__3ux2u\",\"card\":\"leaderboardCards_card__fsm2z\",\"position\":\"leaderboardCards_position__3N8FU\",\"teamData\":\"leaderboardCards_teamData__3lMg2\",\"name\":\"leaderboardCards_name__iZGSH\",\"points\":\"leaderboardCards_points__17NnI\",\"userTeam\":\"leaderboardCards_userTeam__33TQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"challenges\":\"play_challenges__3k8lT\",\"playTimePlay\":\"play_playTimePlay__3Fn4V\",\"challengesGrid\":\"play_challengesGrid__f9464\",\"centerContainer\":\"play_centerContainer__1Lhjd\",\"pointer\":\"play_pointer__1CiZx\",\"flag\":\"play_flag__2xH9a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pop_alert\":\"popalert_pop_alert__1aYly\",\"visible\":\"popalert_visible__12WZN\",\"hidden\":\"popalert_hidden__2--X6\",\"pop_alert_content\":\"popalert_pop_alert_content__3o2la\",\"pop_alert_message\":\"popalert_pop_alert_message__nbOTl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hidden\":\"animateDl_hidden__Qx4H4\",\"show\":\"animateDl_show__Gr4fF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"errorModal_modal__1ejF8\",\"hidden\":\"errorModal_hidden__2GpeV\",\"content\":\"errorModal_content__22g8p\",\"header\":\"errorModal_header__1x3ZV\",\"body\":\"errorModal_body__1c3JF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"challengeCard_card__3lKTN\",\"solved\":\"challengeCard_solved__mHn49\",\"header\":\"challengeCard_header__3Bbg5\",\"description\":\"challengeCard_description__27nZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"footer_all__2AkGX\",\"link\":\"footer_link__3hHKL\"};","module.exports = __webpack_public_path__ + \"static/media/lug.6b78d6f4.png\";","module.exports = __webpack_public_path__ + \"static/media/vit.88ad65cd.png\";","module.exports = __webpack_public_path__ + \"static/media/technovit.f568c299.png\";","module.exports = __webpack_public_path__ + \"static/media/qr2.4249c200.png\";","module.exports = __webpack_public_path__ + \"static/media/ideassion.3bdc15a7.png\";","import React from 'react';\nimport styles from './footer.module.css';\n\nexport default function Footer() {\n    return (\n        <footer className={styles.all}>\n            Made with ❤️ by{' '}\n            <a\n                className={styles.link}\n                target='_blank'\n                rel='noreferrer'\n                href='https://lugvitc.github.io/'\n            >\n                LUG\n            </a>\n        </footer>\n    );\n}\n\n","export default function useFetch() {\n    // const apiURL = 'https://backmagic.herokuapp.com/api';\n    // const apiURL = 'https://dolphin-app-653c7.ondigitalocean.app/api';\n    // const apiURL = 'https://backmagic-jirrg.ondigitalocean.app/api';\n    // const apiURL = 'http://127.0.0.1:5000/api';\n    // const apiURL = 'https://king-prawn-app-o4bg6.ondigitalocean.app/api'\n    const apiURL = 'http://backend.lugvitc.org/api';\n\n    const api = (path, init) => fetch(apiURL + path, init);\n\n    const apiPost = (path, object) =>\n        api(path, {\n            method: 'POST',\n            headers: {\n                ContentType: 'application/json',\n                \"Access-Control-Allow-Origin\":\"*\"\n            },\n            body: JSON.stringify(object)\n        });\n\n    const apiAsTeam = async path => {\n        const res = api(path, {\n            headers: {\n                Authorization: `Bearer ${window.localStorage.getItem(\n                    'access-token'\n                )}`,\n                \"Access-Control-Allow-Origin\":\"*\"\n            }\n        });\n        const response = res.clone();\n        if (res.status !== 401) {\n            const data = await res.json();\n            if (data && data.access_token)\n                window.localStorage.setItem('access-token', data.access_token);\n        } else {\n            window.localStorage.setItem('access-token', '');\n        }\n        return response;\n    };\n\n    const apiPostAsTeam = async (path, object) => {\n        const res = await api(path, {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${window.localStorage.getItem(\n                    'access-token'\n                )}`,\n                \"Access-Control-Allow-Origin\":\"*\"\n            },\n            body: JSON.stringify(object)\n        });\n        const response = res.clone();\n        if (res.ok) {\n            const data = await res.json();\n            if (data && data.access_token)\n                window.localStorage.setItem('access-token', data.access_token);\n        } else {\n            window.localStorage.setItem('access-token', '');\n        }\n        return response;\n    };\n\n    const apiPostGetJsonAsTeam = async (path, object) => {\n        const res = await api(path, {\n            method: object ? 'POST' : 'GET',\n            headers: {\n                Authorization: `Bearer ${window.localStorage.getItem(\n                    'access-token'\n                )}`,\n                \"Access-Control-Allow-Origin\":\"*\"\n            },\n            body: object ? JSON.stringify(object) : undefined\n        });\n        if (res.ok) {\n            const data = await res.json();\n            const ans = data;\n            if (data && data.access_token) {\n                window.localStorage.setItem('access-token', data.access_token);\n                delete ans['access_token'];\n            }\n            return ans;\n        } else {\n            window.localStorage.setItem('access-token', '');\n        }\n    };\n\n    return {\n        api,\n        apiPost,\n        apiAsTeam,\n        apiPostAsTeam,\n        apiPostGetJsonAsTeam\n    };\n}\n\n","import useFetch from './useFetch';\nimport create from 'zustand';\n\nconst teamStore = create(set => ({\n    team: null,\n    setTeam: team => set({ team })\n}));\n\nexport default function useTeam() {\n    const { team, setTeam } = teamStore();\n\n    const { apiPostGetJsonAsTeam, apiAsTeam } = useFetch();\n\n    const fetchTeam = async () => {\n        const data = await apiPostGetJsonAsTeam('/ctf/team');\n        setTeam(data);\n    };\n\n    const logoutTeam = () => {\n        // apiAsTeam('/ctf/logout');\n        window.localStorage.setItem('access-token', '');\n        setTeam(null);\n    };\n\n    return {\n        team,\n        fetchTeam,\n        logoutTeam\n    };\n}\n\n","import React from 'react';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport useTeam from '../../hooks/useTeam';\nimport styles from './navbar.module.css';\n\nconst links = [\n    { to: '/', text: 'Home' },\n    { to: '/play', text: 'Play' },\n    { to: '/leaderboard', text: 'Leaderboard' }\n];\n\nexport default function Navbar() {\n    const { team, logoutTeam } = useTeam();\n    const [menuIsVisible, setMenuIsVisible] = useState(false);\n\n    const promptThenLogout = () => {\n        if (window.confirm(`Logging out as team ${team.name}`)) logoutTeam();\n    };\n\n    return (\n        <nav className={styles.all}>\n\n            <div className={styles.logos}> <p>TechnoVIT : LUGVITC's</p></div>\n            <div className={styles.name}>Cyber-0-Day 2.0 : Uncover.Adapt.Triumph</div>\n\n            <div className={styles.links}>\n                {links.map(link => (\n                    <NavLink\n                        className={({ isActive }) =>\n                            `${styles.link} ${isActive ? styles.active : null}`\n                        }\n                        key={link.to}\n                        to={link.to}\n                    >\n                        {link.text}\n                    </NavLink>\n                ))}\n            </div>\n            {team ? (\n                <>\n                    <NavLink\n                        className={({ isActive }) =>\n                            `${styles.link} ${isActive ? styles.active : null}`\n                        }\n                        to='/team'\n                    >\n                        Team {team.name}: {team.currentPoints || 0} points\n                    </NavLink>\n                    <div className={styles.link} onClick={promptThenLogout}>\n                        Logout\n                    </div>\n                </>\n            ) : (\n                <>\n                    <NavLink\n                        className={({ isActive }) =>\n                            `${styles.link} ${isActive ? styles.active : null}`\n                        }\n                        to='/login'\n                    >\n                        Login\n                    </NavLink>\n                    <NavLink\n                        className={({ isActive }) =>\n                            `${styles.link} ${isActive ? styles.active : null}`\n                        }\n                        to='/signup'\n                    >\n                        Signup\n                    </NavLink>\n                </>\n            )}\n            <div\n                className={styles.menu}\n                onClick={() => setMenuIsVisible(!menuIsVisible)}\n            >\n                {menuIsVisible ? <>X</> : <>M</>}\n            </div>\n            {menuIsVisible && (\n                <div\n                    className={styles.fullScreenNav}\n                    onClick={() => setMenuIsVisible(false)}\n                >\n                    {links.map(link => (\n                        <NavLink\n                            className={({ isActive }) =>\n                                `${styles.link} ${\n                                    isActive ? styles.active : null\n                                }`\n                            }\n                            key={link.to}\n                            to={link.to}\n                        >\n                            {link.text}\n                        </NavLink>\n                    ))}\n                    {team ? (\n                        <>\n                            <NavLink\n                                className={({ isActive }) =>\n                                    `${styles.link} ${\n                                        isActive ? styles.active : null\n                                    }`\n                                }\n                                to='/team'\n                            >\n                                Team {team.name}: {team.currentPoints || 0}{' '}\n                                points\n                            </NavLink>\n                            <div\n                                className={styles.link}\n                                onClick={promptThenLogout}\n                            >\n                                Logout\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <NavLink\n                                className={({ isActive }) =>\n                                    `${styles.link} ${\n                                        isActive ? styles.active : null\n                                    }`\n                                }\n                                to='/login'\n                            >\n                                Login\n                            </NavLink>\n                            <NavLink\n                                className={({ isActive }) =>\n                                    `${styles.link} ${\n                                        isActive ? styles.active : null\n                                    }`\n                                }\n                                to='/signup'\n                            >\n                                Signup\n                            </NavLink>\n                        </>\n                    )}\n                </div>\n            )}\n        </nav>\n    );\n}\n\n","import React from 'react';\nexport default function UpArrowIcon() {\n    return (\n        <svg\n            xmlns='http://www.w3.org/2000/svg'\n            height='24px'\n            viewBox='0 0 24 24'\n            width='24px'\n            fill='#000000'\n        >\n            <path d='M0 0h24v24H0V0z' fill='none' />\n            <path d='M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z' />\n        </svg>\n    );\n}\n","import React from 'react';\nimport UpArrowIcon from './upArrowIcon';\nimport './goToTopButton.css';\nimport { useEffect, useState } from 'react';\n\nexport default function GoToTopButton() {\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        const handleScroll = () => setShow(window.scrollY > 0);\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, []);\n\n    return (\n        show && (\n            <div className='to-top' onClick={() => window.scrollTo(0, 0)}>\n                <UpArrowIcon />\n            </div>\n        )\n    );\n}\n\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport './styles/App.css';\n\nimport Footer from './components/footer/footer';\nimport Navbar from './components/navbar/navbar';\nimport GoToTopButton from './components/gotToTopButton/goToTopButton';\n\nexport default function App() {\n    return (\n        <>\n            <Navbar />\n            <main>\n                <Outlet />\n            </main>\n            <GoToTopButton />\n            <Footer />\n        </>\n    );\n}\n\n","import React from 'react'\nexport const info = {\n    \"Event\": \"CYBER-0-DAY 2.0\",\n    \"Subtitle\": \"WORKSHOP X CTF X TREASURE HUNT\",\n    \"Location\": \"NETAJI AUDITORIUM\",\n    \"Dates\": <div>6<sup>th</sup> to 7<sup>th</sup> October</div>,\n    \"Fees\": \"₹300/- per person\"\n}\nexport const faqs = [\n    { q: 'What is the venue of the event?', a: info.Location },\n    { q: 'When is the event?', a: '6th to 7th October' },\n    { q: 'What happens in Elimination 1?', a: 'Top 10 teams having higher points in the challenges will advance to the next rounds of competition. Other teams have to discontinue from the competition.' },\n    { q: 'Will the participants be provided with Food?', a: 'Only Refreshments will be provided to the participants.' },\n    { q: 'Will the participants be provided with Internet connection?', a: 'Yes, a Wi-Fi connection will be provided for the participants.' },\n    { q: 'Is this a team event?', a: 'Yes it is a team event comprising of 1-3 members.' },\n    { q: 'How to register as a team?', a: 'Every participant has to register individually for the event. Team formation will happen on the event day. You may find your team mates earlier if you wish to.' },\n    { q: 'What are the winners prizes?', a: 'Prizes worth Rs. 10,000+.' },\n    { q: 'Where do we register for the event?', a: 'You can scan the QR Code in the top of the page or visit https://vitchennaievents.com/conf1/ to register for the event.' }\n];\n\nexport const days = [\n    {\n        day: (\n            <>\n                <b>Day 1: Comprehensive Linux Workshop + Quiz</b>\n            </>\n        ),\n        schedule: [\n            { description: 'Date: October 6th, 2023' },\n            { description: 'Time: 9:00 AM to 6:00 PM' },\n            { description: \"On the inaugural day, participants will dive into a comprehensive hands-on workshop designed to equip them with a solid foundation in Linux, a fundamental skill for anyone venturing into the world of cybersecurity.\" },\n            { description: \"This workshop will take participants through an in-depth exploration of Linux, structured chapter by chapter. Key topics covered include Linux fundamentals, which serve as the backbone of various server systems, and cryptography, the cornerstone of secure communication and data protection, ensuring confidentiality, integrity, and authentication.\" },\n            { description: \"Participants will also delve into OSINT (Open-source Intelligence) and reconnaissance techniques, essential for gathering information about potential targets.\" },\n            {description: \"The day will culminate with a focus on web exploitation, enabling participants to identify and exploit vulnerabilities in web applications, guarding against unauthorized access and data breaches.\"},\n            {description: \"Following the workshop, knowledge assessment quizzes will test participants' understanding.\"}\n        ]\n    },\n    {\n        day: (\n            <>\n                <b>Round 2: Overnight Capture The Flag (CTF) Challenge (Top 20 Teams)</b>\n            </>\n        ),\n        schedule: [\n            { description: 'Date: October 6th, 2023, to October 7th, 2023'},\n            { description: 'Time: 7:00 PM to 7:00 AM (Overnight)' },\n            { description: 'The top 20 teams from Round 1 will participate in the thrilling Capture The Flag (CTF) challenge. This overnight competition will test their practical skills in cybersecurity and ethical hacking, simulating real-world scenarios.' },\n            { description: 'Participants will work tirelessly throughout the night to solve complex challenges and demonstrate their prowess in the field.' }\n        ]\n    },\n    {\n        day: (\n            <>\n                <b>Round 3: Grand Finale - Treasure Hunt (Top 10 Teams)</b>\n            </>\n            ),\n        schedule: [\n            { description: 'Date: 7th, October, 2023' },\n            { description: 'Time: 7:30 AM to 8:30 AM '},\n            { description: 'The top 10 teams emerging from the Overnight CTF will engage in the Grand Finale - Treasure Hunt.'},\n            { description: 'This challenging event will require teams to use their expertise to solve complex puzzles and challenges, aiming to secure victory.'},\n            { description: 'The Treasure Hunt promises an exhilarating climax to the event.'}\n        ]\n    },\n];\n\n\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { HiArrowSmDown } from \"react-icons/hi\";\n\nexport default function FaqComponent(props) {\n  const [active, setActive] = useState(false);\n\n  const contentRef = useRef(null);\n\n  useEffect(() => {\n    contentRef.current.style.maxHeight = active\n      ? `${contentRef.current.scrollHeight}px`\n      : \"0px\";\n  }, [contentRef, active]);\n\n  const toggleAccordion = () => {\n    setActive(!active);\n  };\n  return (\n    <>\n      <div className=\"App\">\n        <div>\n          <button\n            className={`question-section ${active}`}\n            onClick={toggleAccordion}\n          >\n            <div>\n              <div className=\"question-align\">\n                <h4 className=\"question-style\">\n                 {props.que}\n                </h4>\n                <HiArrowSmDown\n                  className={active ? `question-icon rotate` : `question-icon`}\n                />\n              </div>\n              <div\n                ref={contentRef}\n                className={active ? `answer answer-divider` : `answer`}\n              >\n                <p>{props.ans}</p>\n              </div>\n            </div>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport styles from './animateDl.module.css';\n\nexport default function AnimateDL({ dt, dd }) {\n    const [dtVisible, setDtVisible] = useState(false);\n    const [ddVisible, setDdVisible] = useState(false);\n    const dtRef = useRef(null);\n    const ddRef = useRef(null);\n\n    useEffect(() => {\n        const options = {\n            root: null,\n            rootMargin: '0px',\n            threshold: 1.0\n        };\n        const comeFromLeft = new IntersectionObserver(entries => {\n            const [entry] = entries;\n            setDtVisible(entry.isIntersecting);\n        }, options);\n        const comeFromRight = new IntersectionObserver(entries => {\n            const [entry] = entries;\n            setDdVisible(entry.isIntersecting);\n        }, options);\n\n        if (dtRef.current) comeFromLeft.observe(dtRef.current);\n        if (ddRef.current) comeFromRight.observe(ddRef.current);\n\n        return () => {\n            if (dtRef.current) comeFromLeft.unobserve(dtRef.current);\n            if (ddRef.current) comeFromRight.unobserve(ddRef.current);\n        };\n    }, [dtRef, ddRef]);\n\n    return (\n        <>\n            <dt ref={dtRef} className={dtVisible ? styles.show : styles.hidden}>\n                {dt}\n            </dt>\n            <dd ref={ddRef} className={ddVisible ? styles.show : styles.hidden}>\n                {dd}\n            </dd>\n        </>\n    );\n}\n","import styles from \"./errorModal.module.css\";\nimport React from 'react'\n\nfunction ErrorModal({ error, open }) {\n  return (\n    <dialog open={open} className={styles.modal}>\n      <div className={styles.content}>\n        <div className={styles.header}>\n          <h2>Oops!</h2>\n        </div>\n        <div className={styles.body}>\n          <p>{error}</p>\n        </div>\n      </div>\n    </dialog>\n  );\n}\n\nexport default ErrorModal;\n\n/*\n\n    <div className={styles.modal}>\n      <div className={styles.content}>\n        <div className={styles.header}>\n          <h2>Oops!</h2>\n        </div>\n        <div className={styles.body}>\n          <p>{error}</p>\n        </div>\n      </div>\n    </div>\n\n*/\n","// <<<<<<< error-modal\n// import styles from \"./landing.module.css\";\n// import { faqs, days, info } from \"./content\";\n\n// import lugLogo from \"./lug.png\";\n// import vitLogo from \"./vit.png\";\n// import ideassionLogo from \"./ideassion.png\";\n// import qr from \"./qr.png\";\n// import React from \"react\";\n// import FaqComponent from \"../../components/faq/faq\";\n// =======\nimport React from 'react';\nimport styles from './landing.module.css';\nimport { faqs, days, info } from './content';\n\nimport lugLogo from './lug.png';\nimport vitLogo from './vit.png';\nimport ideassionLogo from './ideassion.png';\nimport technovitLogo from './technovit.png';\nimport qr from './qr2.png';\nimport FaqComponent from '../../components/faq/faq';\n// >>>>>>> master\n\nimport AnimateDL from \"./animateDL/animateDL\";\nimport ErrorModal from \"../../components/errorModals/errorModal\";\n\nexport default function Landing() {\n// <<<<<<< error-modal\n//   return (\n//     <div className={styles.all}>\n//       <section className={styles.section}>\n//         <div className={styles.logoRow}>\n//           <img className={styles.logo} src={vitLogo} />\n//           <div className={styles.center}>\n//             <h3 className={styles.sponsors}>SPONSORS</h3>\n//             <div>\n//               <img\n//                 className={styles.logo}\n//                 style={{ width: \"200px\", height: \"auto\" }}\n//                 src={ideassionLogo}\n//               />\n//             </div>\n//           </div>\n//           <img className={styles.logo} src={lugLogo} />\n//         </div>\n\n//         <h1 className={styles.title}>{info.Event}</h1>\n//         <div className={styles.tagline}>{info.Subtitle}</div>\n//         <div className={styles.infoCards}>\n//           <div>\n//             <div>{info.Location}</div>\n//             <div>{info.Dates}</div>\n//           </div>\n//           <div>\n//             ENTRY FEES <br /> {info.Fees}\n//           </div>\n//           <div>\n//             <strong>REGISTER</strong> <img className={styles.qr} src={qr} />\n//           </div>\n//         </div>\n//       </section>\n//       <section className={styles.section}>\n//         <h2 className={styles.subtitle}>SCHEDULE</h2>\n//         <dl className={styles.dl}>\n//           {days.map((day, index) => (\n//             <AnimateDL\n//               dt={day.day}\n//               dd={day.schedule.map((s) => (\n//                 <li className={styles.schedule}>{s.description}</li>\n//               ))}\n//               key={index}\n//             />\n//             // <React.Fragment key={index}>\n//             //     <dt>{day.day}</dt>\n//             //     <dd>\n//             //         <ul>\n//             //             {day.schedule.map(s => (\n//             //                 <li key={s.time}>\n//             //                     {s.time}: {s.description}\n//             //                 </li>\n//             //             ))}\n//             //         </ul>\n//             //     </dd>\n//             // </React.Fragment>\n//           ))}\n//         </dl>\n//       </section>\n//       <section className={styles.section} id=\"faq\">\n//         <h2 className={styles.subtitle}>FAQs</h2>\n\n//         <dl className={styles.dl}>\n//           {faqs.map((faq) => (\n//             <FaqComponent que={faq.q} ans={faq.a}></FaqComponent>\n//             // <React.Fragment key={faq.q}>\n//             //     <dt>{faq.q}</dt>\n//             //     <dd>{faq.a}</dd>\n//             // </React.Fragment>\n//           ))}\n//         </dl>\n//       </section>\n//       <section className={styles.section}>\n//         <h2>Queries</h2>\n//         <dl className={styles.dl}>\n//           <AnimateDL\n//             dt={\"Student Coordinators\"}\n//             dd={\n//               <ul>\n//                 <li>Ansh Sharma: +919540018950</li>\n//               </ul>\n//             }\n//           />\n//           <AnimateDL\n//             dt={\"Faculty Coordinators\"}\n//             dd={\n//               <ul>\n//                 <li>Dr. Gayathri R.</li>\n//                 <li>Dr. Rajiv Vincent</li>\n//               </ul>\n//             }\n//           />\n//           <AnimateDL\n//             dt={\"Contact Us\"}\n//             dd={\n//               <>\n//                 Linux Club:\n//                 <ul>\n//                   <li>\n//                     Email:{\" \"}\n//                     <a href=\"mailto:cclinuxclub@vit.ac.in\">\n//                       cclinuxclub@vit.ac.in\n//                     </a>\n//                   </li>\n//                   <li>\n//                     <a\n//                       href=\"https://www.instagram.com/lugvitc/\"\n//                       target=\"_blank\"\n//                       rel=\"noreferrer\"\n//                     >\n//                       Instagram\n//                     </a>\n//                   </li>\n//                   <li>\n//                     <a\n//                       href=\"https://lugvitc.github.io/\"\n//                       target=\"_blank\"\n//                       rel=\"noreferrer\"\n//                     >\n//                       Website\n//                     </a>\n//                   </li>\n//                 </ul>\n//               </>\n//             }\n//           />\n//           {/* <dt>Student Coordinators</dt>\n// =======\n    return (\n        <div className={styles.all}>\n            <section className={styles.section}>\n                <div className={styles.logoRow}>\n                    <img className={styles.logo} src={vitLogo} />\n                    <div className={styles.center}>\n                        <h3 className={styles.sponsors}>SPONSORS</h3>\n                        <div>\n                            <img className={styles.logo} style={{ width: \"200px\", height: \"auto\" }} src={technovitLogo} />\n                        </div>\n                    </div>\n                    <img className={styles.logo} src={lugLogo} />\n\n                </div>\n\n\n                <h1 className={styles.title}>{info.Event}</h1>\n                <div className={styles.tagline}>{info.Subtitle}</div>\n                <div className={styles.infoCards}>\n                    <div>\n                        <div>{info.Location}</div>\n                        <div>\n                            {info.Dates}\n                        </div>\n                    </div>\n                    <div>\n                        ENTRY FEES <br /> {info.Fees}\n                    </div>\n                    <div>\n                        <strong>REGISTER</strong> <img className={styles.qr} src={qr} />\n                    </div>\n                </div>\n            </section>\n            <section className={styles.section}>\n                <h2 className={styles.subtitle}>SCHEDULE</h2>\n                <dl className={styles.dl}>\n                    {days.map((day, index) => (\n                        <AnimateDL\n                            dt={day.day}\n                            dd={day.schedule.map(s => (\n                                <li className={styles.schedule}>\n                                    {s.description}\n                                </li>\n                            ))}\n                            key={index}\n                        />\n                        // <React.Fragment key={index}>\n                        //     <dt>{day.day}</dt>\n                        //     <dd>\n                        //         <ul>\n                        //             {day.schedule.map(s => (\n                        //                 <li key={s.time}>\n                        //                     {s.time}: {s.description}\n                        //                 </li>\n                        //             ))}\n                        //         </ul>\n                        //     </dd>\n                        // </React.Fragment>\n                    ))}\n                </dl>\n            </section>\n            <section className={styles.section} id='faq'>\n                <h2 className={styles.subtitle}>FAQs</h2>\n\n                <dl className={styles.dl}>\n                    {faqs.map(faq => (\n                        <FaqComponent que={faq.q} ans={faq.a}></FaqComponent>\n                        // <React.Fragment key={faq.q}>\n                        //     <dt>{faq.q}</dt>\n                        //     <dd>{faq.a}</dd>\n                        // </React.Fragment>\n                    ))}\n                </dl>\n            </section>\n            <section className={styles.section}>\n                <h2>Queries</h2>\n                <dl className={styles.dl}>\n\n                    <AnimateDL\n                        dt={'Student Coordinators'}\n                        dd={\n                            <ul>\n                                <li>Ansh Sharma: +919540018950</li>\n                                <li>Shaina: +918925785445</li>\n                            </ul>\n                        }\n                    />\n                    <AnimateDL\n                        dt={'Faculty Coordinators'}\n                        dd={\n                            <ul>\n                                <li>Dr. Gayathri R.</li>\n                                <li>Dr. Mary Shamala L</li>\n                            </ul>\n                        }\n                    />\n                    <AnimateDL\n                        dt={'Contact Us'}\n                        dd={\n                            <>\n                                Linux Club:\n                                <ul>\n                                    <li>Email: <a href='mailto:cclinuxclub@vit.ac.in'>cclinuxclub@vit.ac.in</a></li>\n                                    <li>\n                                        <a\n                                            href='https://www.instagram.com/lugvitc/'\n                                            target='_blank'\n                                            rel='noreferrer'\n                                        >\n                                            Instagram\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a\n                                            href='https://lugvitc.github.io/'\n                                            target='_blank'\n                                            rel='noreferrer'\n                                        >\n                                            Website\n                                        </a>\n                                    </li>\n                                </ul>\n                            </>\n                        }\n                    />\n                    {/* <dt>Student Coordinators</dt>\n// >>>>>>> master\n                    <dd>\n                        <ul>\n                            <li>Swaifa Haque: 93724 62680</li>\n                            <li>Abhiram Arumilli: 83338 42117</li>\n                        </ul>\n                    </dd>\n                    <dt>Faculty Coordinators</dt>\n                    <dd>\n                        <ul>\n                            <li>Dr. R Vedhapriyavadhana</li>\n                            <li>Dr. Gayathri R.</li>\n                        </ul>\n                    </dd>\n                    <dt>Contact Us</dt>\n                    <dd>\n                        Linux Club:\n                        <ul>\n                            <li>Email: cclinuxclub@vit.ac.in</li>\n                            <li>\n                                <a\n                                    href='https://www.instagram.com/lugvitc/'\n                                    target='_blank'\n                                    rel='noreferrer'\n                                >\n                                    Instagram\n                                </a>\n                            </li>\n                            <li>\n                                <a\n                                    href='https://lugvitc.github.io/'\n                                    target='_blank'\n                                    rel='noreferrer'\n                                >\n                                    Website\n                                </a>\n                            </li>\n                        </ul>\n                    </dd>\n                    <dd>\n                        Tech Researchers Club:\n                        <ul>\n                            <li>Email: techresearchers.vitc@gmail.com</li>\n                            <li>\n                                <a\n                                    href='https://www.instagram.com/techresearchers.vitc/'\n                                    target='_blank'\n                                    rel='noreferrer'\n                                >\n                                    Instagram\n                                </a>\n                            </li>\n                        </ul>\n                    </dd> */}\n        </dl>\n      </section>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport useFetch from '../../hooks/useFetch';\n\nimport styles from './signup.module.css';\n\nexport default function Signup() {\n    const [teamValues, setTeamValues] = useState({\n        name: '',\n        member1RegNo: '',\n        member2RegNo: '',\n        member3RegNo: '',\n        password: ''\n    });\n\n    const [teamValuesAreValid, setTeamValuesAreValid] = useState({\n        member1RegNo: true,\n        member2RegNo: true,\n        member3RegNo: true\n    });\n\n    const navigate = useNavigate();\n    const { apiPost } = useFetch();\n\n    // useEffect(() => {\n    //     const verifyRegNo = async (regno, endpoint) => {\n    //         if (teamValues[regno] && teamValues.member1RegNo.length === 9) {\n    //             const res = await apiPost(endpoint, {\n    //                 regno: teamValues.member1RegNo\n    //             });\n    //             const data = await res.json();\n    //             if (data.valid) {\n    //                 setTeamValuesAreValid({\n    //                     ...teamValuesAreValid,\n    //                     [regno]: true\n    //                 });\n    //             }\n    //         }\n    //     };\n\n    //     verifyRegNo('member1RegNo', '/ctf/verify-duplicate-regno');\n    //     verifyRegNo('member2RegNo', '/ctf/verify-duplicate-regno');\n    //     verifyRegNo('member3RegNo', '/ctf/verify-duplicate-regno');\n    // }, [\n    //     teamValues.member1RegNo,\n    //     teamValues.member2RegNo,\n    //     teamValues.member3RegNo\n    // ]);\n\n    const submit = async e => {\n        e.preventDefault();\n        if (\n            !teamValues.name ||\n            !teamValues.member1RegNo ||\n            !teamValues.password\n        ) {\n            alert('Please fill out all the fields');\n        } else {\n            if (!teamValues.member2RegNo) delete teamValues['member2RegNo'];\n            if (!teamValues.member3RegNo) delete teamValues['member3RegNo'];\n\n            const r1 = await apiPost('/ctf/verify-team-name', {\n                name: teamValues.name\n            });\n            const d1 = await r1.json();\n\n            if (\n                d1.valid &&\n                teamValuesAreValid.member1RegNo &&\n                (teamValues.member2RegNo\n                    ? teamValuesAreValid.member2RegNo\n                    : true) &&\n                (teamValues.member3RegNo\n                    ? teamValuesAreValid.member3RegNo\n                    : true)\n            ) {\n                const res = await apiPost('/ctf/create-team', teamValues);\n                if (res.ok) {\n                    navigate('/login');\n                }\n            } else {\n                alert('team name already taken');\n            }\n        }\n    };\n\n    const handleChange = input => e => {\n        setTeamValues({ ...teamValues, [input]: e.target.value });\n    };\n\n    return (\n        <>\n            <form className='lug-form' onSubmit={submit}>\n                <div className='form-start'> Create Team Here </div>\n\n                <div className='form-field'>\n                    <label> * Group Name: </label>\n                    <input\n                        type='text'\n                        maxLength='128'\n                        onChange={handleChange('name')}\n                        value={teamValues.name}\n                    />\n                </div>\n\n                <div className='form-field'>\n                    <label> * Group Password: </label>\n                    <input\n                        type='password'\n                        maxLength='64'\n                        onChange={handleChange('password')}\n                        value={teamValues.password}\n                    />\n                </div>\n\n                <div className='form-field'>\n                    <label> * Registration Number (Member 1): </label>\n                    <input\n                        type='text'\n                        onChange={handleChange('member1RegNo')}\n                        value={teamValues.member1RegNo}\n                        className={\n                            teamValues.member1RegNo &&\n                            teamValuesAreValid.member1RegNo\n                                ? styles.valid\n                                : styles.invalid\n                        }\n                    />\n                </div>\n\n                <div className='form-field'>\n                    <label> Registration Number (Member 2): </label>\n                    <input\n                        type='text'\n                        onChange={handleChange('member2RegNo')}\n                        value={teamValues.member2RegNo}\n                        className={\n                            teamValues.member2RegNo\n                                ? teamValuesAreValid.member2RegNo\n                                    ? styles.valid\n                                    : styles.invalid\n                                : ''\n                        }\n                    />\n                </div>\n\n                <div className='form-field'>\n                    <label> Registration Number (Member 3): </label>\n                    <input\n                        type='text'\n                        onChange={handleChange('member3RegNo')}\n                        value={teamValues.member3RegNo}\n                        className={\n                            teamValues.member3RegNo\n                                ? teamValuesAreValid.member3RegNo\n                                    ? styles.valid\n                                    : styles.invalid\n                                : ''\n                        }\n                    />\n                </div>\n\n                <div className='form-end'>\n                    <button type='submit' className='form-nav-button'>\n                        Create\n                    </button>\n                </div>\n            </form>\n        </>\n    );\n}\n\n","import React from 'react';\nimport './loadingAnimation.css';\n\nexport default function LoadingAnimation() {\n    return (\n        <div className='loading-animation-container'>\n            <svg\n                className='loading-animation'\n                xmlns='http://www.w3.org/2000/svg'\n                height='24px'\n                viewBox='0 0 24 24'\n                width='24px'\n                fill='#000000'\n            >\n                <path d='M0 0h24v24H0V0z' fill='none' />\n                <path d='M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z' />\n            </svg>\n        </div>\n    );\n}\n\n","import React from 'react';\nimport { useState } from 'react';\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\nimport LoadingAnimation from '../components/loadingAnimation/loadingAnimation';\nimport useFetch from '../hooks/useFetch';\nimport useTeam from '../hooks/useTeam';\n\nexport default function Login() {\n    const [loginValues, setLoginValues] = useState({\n        user: '',\n        name: '',\n        password: ''\n    });\n\n    const [loading, setLoading] = useState(false);\n\n    const handleChange = input => e => {\n        setLoginValues({ ...loginValues, [input]: e.target.value });\n    };\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { apiPost } = useFetch();\n    const { fetchTeam } = useTeam();\n\n    const submit = async e => {\n        e.preventDefault();\n        if (!loginValues.name || !loginValues.password) {\n            alert('Please fill out all the fields');\n        } else {\n            setLoading(true);\n            const res = await apiPost('/ctf/team-login', loginValues);\n            if (res.ok) {\n                const data = await res.json();\n                window.localStorage.setItem('access-token', data.access_token);\n                await fetchTeam();\n                if (location.pathname === '/login') navigate('/play');\n            } else {\n                setLoading(false);\n                window.alert('Invalid Username or Password');\n            }\n        }\n    };\n\n    return (\n        <>\n            {loading ? (\n                <LoadingAnimation />\n            ) : (\n                <>\n                    <form className='lug-form' onSubmit={submit}>\n                        <div className='form-start'> Login </div>\n\n                        <div className='form-field'>\n                            <label> Username:  </label>\n                            <input\n                                type='text'\n                                maxLength='128'\n                                onChange={handleChange('user')}\n                                value={loginValues.user}\n                                className='text'\n                            />\n                        </div>\n\n                        <div className='form-field'>\n                            <label> Group Name: </label>\n                            <input\n                                type='text'\n                                maxLength='128'\n                                onChange={handleChange('name')}\n                                value={loginValues.name}\n                                className='text'\n                            />\n                        </div>\n\n                        <div className='form-field'>\n                            <label> Group Password: </label>\n                            <input\n                                type='password'\n                                maxLength='16'\n                                onChange={handleChange('password')}\n                                value={loginValues.password}\n                                className='text'\n                            />\n                        </div>\n                        <div className='form-end'>\n                            New user?, <NavLink to='/signup'><pre> register </pre></NavLink>\n                            now and start the challenge.\n                        </div>\n\n                        <div className='form-end'>\n                            <button type='submit' className='form-nav-button'>\n                                Login\n                            </button>\n                        </div>\n                    </form>\n                </>\n            )}\n        </>\n    );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport styles from './popalert.module.css';\n\nconst PopAlert = ({ message, duration, onClose }) => {\n  const [visible, setVisible] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setVisible(false);\n      onClose();\n    }, duration);\n\n    return () => clearTimeout(timer);\n  }, [duration, onClose]);\n\n  return (\n    <>\n      {visible && (\n        <div className={`${styles.pop_alert} ${visible ? styles.visible : styles.hidden}`}>\n          <div className={styles.pop_alert_content}>\n            <span className={styles.pop_alert_message}>{message}</span>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PopAlert;\n","// <<<<<<< error-modal\n// import { useState, useEffect } from \"react\";\n// import styles from \"./challengeModal.module.css\";\n// import useFetch from \"../../hooks/useFetch\";\n// import ReactMarkdown from \"react-markdown\";\n// import PopAlert from \"../popAlert/popAlert\";\n// =======\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport styles from './challengeModal.module.css';\nimport useFetch from '../../hooks/useFetch';\nimport ReactMarkdown from 'react-markdown';\nimport PopAlert from '../popAlert/popAlert';\n\n// >>>>>>> master\n\nimport LoadingAnimation from \"../loadingAnimation/loadingAnimation\";\nimport ErrorModal from \"../errorModals/errorModal\";\nconst myStyle = {\n  textDecoration: \"none\",\n  fontFamily: \"monospace\",\n  color: \"#ebcece\",\n  fontSize: \"14px\",\n  marginBottom: \"5px\",\n  paddingRight: \"8px\",\n  backgroundColor: \"\",\n};\nfunction ChallengeModal({\n  challenge,\n  modalRef,\n  questionModalOpen,\n  setQuestionModalOpen,\n  isSolved,\n  qWasCorrect,\n  ques_no,\n}) {\n  console.log(challenge.is_hint);\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleShowAlert = () => {\n    setShowAlert(true);\n  };\n\n  const handleCloseAlert = () => {\n    setShowAlert(false);\n  };\n  // const [timer, setTimer] = useState(false);\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [hint_1, setHint1] = useState(\"\");\n  const [hint_2, setHint2] = useState(\"\");\n  const [hint_3, setHint3] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showHints, setShowHints] = useState({\n    hint1: false,\n    hint2: false,\n    hint3: false,\n  });\n\n  const [PortNumber, setPortNumber] = useState(null);\n  const [StartLabVal, setStartLabVal] = useState(false);\n\n\n  function inputChangeHandler(event) {\n    setInputValue(event.target.value);\n  }\n\n  function closeQuestionModal() {\n    if (modalRef.current) {\n      setQuestionModalOpen(false);\n      modalRef.current.close();\n      setInputValue(\"\");\n    }\n  }\n\n  const { apiPostAsTeam, api } = useFetch();\n\n  const submitFlag = async () => {\n    const res = await apiPostAsTeam(\"/ctf/submit-flag\", {\n      flag: inputValue,\n      challenge_id: challenge.id,\n    });\n    try {\n      setLoading(true);\n      const data = await res.json();\n      if (data.valid) {\n        console.log(\"good!\");\n        setQuestionModalOpen(false);\n        qWasCorrect();\n      } else {\n        // alert('invalid flag');\n        handleShowAlert();\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n      return (\n        \n        <ErrorModal error={error.message} open={true} />\n        )\n    }\n  };\n  const startLab = async () => {\n        const res = await apiPostAsTeam('api/ctf/start', {\n            challenge_id: challenge.id\n        });\n        try {\n            setLoading(true);\n            const data = await res.json();\n            if (data.msg === undefined) {\n                console.log('good!');\n                setPortNumber(data.port);\n                setStartLabVal(true);\n            } else {\n                \n                handleShowAlert();\n                setLoading(false);\n            }\n        } catch {\n            alert('error');\n            setLoading(false);\n        }\n    };\n\n    const stopLab = async () => {\n        const res = await apiPostAsTeam('api/ctf/stop', {\n            challenge_id: challenge.id\n        });\n        try {\n            setLoading(true);\n            const data = await res.json();\n            if (data.msg === undefined) {\n                console.log('good!');\n                setPortNumber('');\n                setStartLabVal(false);\n            } else {\n                handleShowAlert();\n                setLoading(false);\n            }\n        } catch {\n            alert('error');\n            setLoading(false);\n        }\n    };\n  \n\n  useEffect(() => {\n    const closeIfClickedOutside = (e) => {\n      if (questionModalOpen && e.target === modalRef.current) {\n        closeQuestionModal();\n        setQuestionModalOpen(false);\n      }\n    };\n    window.addEventListener(\"click\", closeIfClickedOutside);\n    return () => {\n      window.removeEventListener(\"click\", closeIfClickedOutside);\n    };\n  }, [modalRef, questionModalOpen, closeQuestionModal, setQuestionModalOpen]);\n\n  return (\n    <>\n      <dialog ref={modalRef} open={false} className={styles.modal}>\n        <>\n          {isSolved && \"done\"}\n          <div className={styles.close} onClick={closeQuestionModal}>\n            X\n          </div>\n          <div className={styles.header}>\n            <div className={styles.name}>Challenge {challenge.name}</div>\n            <div className={styles.points}>{challenge.points} points</div>\n          </div>\n          <div className={styles.grid}>\n            <div className={styles.description}>\n              <br />\n              <span className={styles.author}>\n                Author : {challenge.created_by}\n              </span>\n              <br />\n              <br />\n              Description:\n              <ReactMarkdown\n                components={{\n                  a: (props) => (\n                    <a {...props} target=\"_blank\" rel=\"noreferrer\" />\n                  ),\n                }}\n              >\n                {challenge.description}\n                {/* links added */}\n                {/* dhananjay added above with meetesh */}\n              </ReactMarkdown>\n              <div className={styles.ctfLinks}>\n                {challenge.links.map((item) => (\n                  <a href={item.link} style={myStyle}>\n                    {item.name}\n                  </a>\n                ))}\n              </div>\n              {/* <div className={styles.hintSpacing}></div> */}\n              Solved by {challenge.solvedBy.length} teams\n            </div>\n          </div>\n          {loading ? (\n            <LoadingAnimation />\n          ) : (\n            <div className=\"form-end\">\n              <input\n                value={inputValue}\n                onChange={inputChangeHandler}\n                className={styles.valid}\n              />\n              <button className=\"form-nav-button\" onClick={submitFlag}>\n                Submit\n              </button>\n            </div>\n          )}\n          {showAlert && (\n            <PopAlert\n              message=\"Invalid flag\"\n              duration={3000}\n              onClose={handleCloseAlert}\n            />\n          )}\n          <div className={styles.hints}>\n            {challenge.is_hint[0] && (\n              <button\n                className=\"form-nav-button\"\n                onClick={() => {\n                  console.log(ques_no);\n                  apiPostAsTeam(\"/ctf/getHint\", {\n                    hint: 0,\n                    challenge_id: ques_no,\n                  })\n                    .then((res) => res.json())\n                    .then((data) => {\n                      let hint = data[\"hint\"];\n                      setShowHints({ ...showHints, hint1: true });\n                      setHint1(hint);\n                    });\n                }}\n              >\n                Hint 1\n              </button>\n            )}\n            {challenge.is_hint[0] && showHints.hint1 && (\n              <div className={styles.hintText}>{hint_1}</div>\n            )}\n            <div className={styles.hintSpacing}></div> {/* Add spacing */}\n            {challenge.is_hint[1] && (\n              <button\n                className=\"form-nav-button\"\n                onClick={() => {\n                  console.log(ques_no);\n                  apiPostAsTeam(\"/ctf/getHint\", {\n                    hint: 1,\n                    challenge_id: ques_no,\n                  })\n                    .then((res) => res.json())\n                    .then((data) => {\n                      let hint = data[\"hint\"];\n                      setShowHints({ ...showHints, hint2: true });\n                      setHint2(hint);\n                    });\n                }}\n              >\n                Hint 2\n              </button>\n            )}\n            {challenge.is_hint[1] && showHints.hint2 && (\n              <div className={styles.hintText}>{hint_2}</div>\n            )}\n            <div className={styles.hintSpacing}></div>\n            {challenge.is_hint[2] && (\n              <button\n                className=\"form-nav-button\"\n                onClick={() => {\n                  console.log(ques_no);\n                  apiPostAsTeam(\"/ctf/getHint\", {\n                    hint: 2,\n                    challenge_id: ques_no,\n                  })\n                    .then((res) => res.json())\n                    .then((data) => {\n                      let hint = data[\"hint\"];\n                      setShowHints({ ...showHints, hint3: true });\n                      setHint3(hint);\n                    });\n                }}\n              >\n                Hint 3\n              </button>\n            )}\n            {challenge.is_hint[2] && showHints.hint3 && (\n              <div className={styles.hintText}>{hint_3}</div>\n            )}\n          </div>\n          {/*  */}\n\n          {/* <div className={styles.hints}>\n                    \n                    <button\n                       className='form-nav-button'\n                       onClick={() => {\n                           console.log(ques_no);\n                           apiPostAsTeam(\"/ctf/getHint\", {\n                                   hint: 0,\n                                   challenge_id: ques_no\n                           })\n                               .then(res => res.json())\n                               .then((data) => {\n                                   let hint = data[\"hint\"];\n                                   setShowHints({ ...showHints, hint1: true });\n                                   setHint1(hint);\n                               });\n                       }}\n                   >\n                       Hint 1\n                   </button> \n                   \n                   {showHints.hint1 && (\n                       <div className={styles.hintText}>{hint_1}</div>\n                   )}\n                   <div className={styles.hintSpacing}></div> \n                   <button\n                       className='form-nav-button'\n                       onClick={() => {\n                           console.log(ques_no);\n                           apiPostAsTeam(\"/ctf/getHint\", {\n                                   hint: 1,\n                                   challenge_id: ques_no\n                           })\n                               .then(res => res.json())\n                               .then((data) => {\n                                   let hint = data[\"hint\"];\n                                   setShowHints({ ...showHints, hint2: true });\n                                   setHint2(hint);\n                               });\n                       }}\n                   >\n                       Hint 2\n                   </button>\n                   \n                   {showHints.hint2 && (\n                       <div className={styles.hintText}>{hint_2}</div>\n                   )}\n                   <div className={styles.hintSpacing}></div>\n               \n                   <button\n                       className='form-nav-button'\n                       onClick={() => {\n                           console.log(ques_no);\n                           apiPostAsTeam(\"/ctf/getHint\", {\n                                   hint: 2,\n                                   challenge_id: ques_no\n                           })\n                               .then(res => res.json())\n                               .then((data) => {\n                                   let hint = data[\"hint\"];\n                                   setShowHints({ ...showHints, hint3: true });\n                                   setHint3(hint);\n                               });\n                       }}\n                   >\n                       Hint 3\n                   </button>\n                   {showHints.hint3 && (\n                       <div className={styles.hintText}>\n                           {hint_3}\n                       </div>\n                   )}\n               </div> */}\n          {/*  */}\n        </>\n      </dialog>\n    </>\n  );\n}\n\nexport default ChallengeModal;\n","import React from 'react';\nimport { useRef, useState } from 'react';\nimport styles from './challengeCard.module.css';\nimport ChallengeModal from '../challengeModal/challengeModal';\nimport ReactMarkdown from 'react-markdown';\n\nexport default function ChallengeCard({ challenge, isSolved, qWasCorrect, ques_no }) {\n    const [questionModalOpen, setQuestionModalOpen] = useState(false);\n    const modalRef = useRef(null);\n\n    function openQuestionModal() {\n        if (modalRef.current) {\n            setQuestionModalOpen(true);\n            modalRef.current.showModal();\n        }\n    }\n\n    return (\n        <>\n        {/* when challenge is not solved */}\n            {!isSolved && (\n                 <ChallengeModal\n                     challenge={challenge}\n                     modalRef={modalRef}\n                     questionModalOpen={questionModalOpen}\n                     setQuestionModalOpen={setQuestionModalOpen}\n                     isSolved={isSolved}\n                     qWasCorrect={qWasCorrect}\n                     ques_no={ques_no}\n                 />\n            \n            )}\n            <div\n                className={`${styles.card} ${isSolved ? styles.solved : ''}`}\n                onClick={openQuestionModal}\n            >\n                <div className={styles.header}>\n                    <h2>{challenge.name}</h2>\n                    <div>Points | {challenge.points}</div>\n                </div>\n                {!isSolved ? (\n                    <div className={styles.description}>\n                        {/* <ReactMarkdown\n                            components={{\n                                a: props => (\n                                    <a\n                                        {...props}\n                                        target='_blank'\n                                        rel='noreferrer'\n                                    />\n                                )\n                            }}\n                        >\n                            {challenge.description}\n                        </ReactMarkdown> */}\n                        Solved by {challenge.solvedBy.length} teams\n                    </div>\n                ) : (\n                    'solved'\n                )}\n            </div>\n        </>\n    );\n}\n\n","import React, { useState, useRef, useEffect } from 'react'\nimport { NavLink } from 'react-router-dom';\n\nimport useFetch from '../../hooks/useFetch';\nimport useTeam from '../../hooks/useTeam';\nimport ChallengeCard from '../../components/challengeCard/challengeCard';\n\nimport styles from './play.module.css';\n// import NotPlay from './notplay';\nimport LoadingAnimation from '../../components/loadingAnimation/loadingAnimation';\n\nexport default function Play() {\n    const [challenges, setChallenges] = useState(null);\n    const [showSolvedChallenges, setShowSolvedChallenges] = useState(false);\n\n    const { apiPostGetJsonAsTeam } = useFetch();\n    const { team, logoutTeam, fetchTeam } = useTeam();\n    // var team = {\n    //     \"name\": \"Test\"\n    // };\n    // const apiPostGetJsonAsTeam = async (url) => {\n    //     return {\n    //         \"challenges\": [{\n    //             \"id\": \"gm\",\n    //             \"solvedBy\": [],\n    //             \"name\": \"test\",\n    //             \"points\": 100\n    //         }, {\n    //             \"id\": \"gm\",\n    //             \"solvedBy\": [],\n    //             \"name\": \"test\",\n    //             \"points\": 100\n    //         }, {\n    //             \"id\": \"gm\",\n    //             \"solvedBy\": [],\n    //             \"name\": \"test\",\n    //             \"points\": 100\n    //         }, {\n    //             \"id\": \"gm\",\n    //             \"solvedBy\": [],\n    //             \"name\": \"test\",\n    //             \"points\": 100\n    //         }, {\n    //             \"id\": \"gm\",\n    //             \"solvedBy\": [],\n    //             \"name\": \"test\",\n    //             \"points\": 100\n    //         }]\n    //     }\n    // }\n    const fetchChallenges = async () => {\n        const data = await apiPostGetJsonAsTeam('/ctf/challenges');\n        setChallenges(data.challenges);\n    };\n\n    \n\n\n\n    useEffect(() => {\n        fetchChallenges();\n    }, []);\n\n    const qWasCorrect = () => {\n        fetchChallenges();\n        fetchTeam();\n    };\n\n\n\n\nreturn (\n    <>\n\n\n\n\n\n    <div className=\"playTime\">\n\n        <h1 className={`${styles.playTimePlay}`}>Play</h1>\n        <h2>Instructions</h2>\n        <p>\n            The file/link in every challenge hides a flag, which is a string\n            of the format <blockquote className={`${styles.pointer}`}><code className={`${styles.flag}`}>{'passwd{...}'}</code></blockquote> \n        </p>\n        <h2>Challenges</h2>\n        <div className={styles.checkboxContainer}>\n            <input\n                type='checkbox'\n                onChange={e => setShowSolvedChallenges(e.target.checked)}\n            />\n            <label>Show solved challenges</label>\n        </div>\n        <div className={styles.centerContainer}>\n            <div className={styles.challengesGrid}>\n                {challenges ? (\n                    challenges\n                        .filter(c =>\n                            showSolvedChallenges\n                                ? true\n                                : !c.solvedBy.includes(team.name)\n                        )\n                        .map(c => (\n                            <ChallengeCard\n                                key={c.id}\n                                challenge={c}\n                                isSolved={\n                                    team\n                                        ? c.solvedBy.includes(team.name)\n                                        : false\n                                }\n                                qWasCorrect={qWasCorrect}\n                                ques_no = {c.id}\n                            />\n                        ))\n                ) : (\n                    <LoadingAnimation />\n                )}\n            </div>\n        </div>\n    </div>\n\n        \n    </>\n);\n\n}\n","import React from 'react';\nimport styles from './leaderboardCards.module.css';\nimport useTeam from '../../hooks/useTeam';\n\nexport default function LeaderboardCards({ teams }) {\n    teams = teams.sort((a, b) =>\n        a != b\n            ? b.currentPoints - a.currentPoints\n            : new Date(b.lastTimeStamp).getTime() -\n              new Date(a.lastTimeStamp).getTime()\n    );\n\n    const { team } = useTeam();\n\n    return (\n        <div className={styles.cards}>\n            {teams.map((t, index) => (\n                <div\n                    className={`${styles.card} ${\n                        team ? (t.name == team.name ? styles.userTeam : '') : ''\n                    }`}\n                    key={t.name}\n                >\n                    <div className={styles.position}>{index + 1}</div>\n                    <div className={styles.teamData}>\n                        <div>\n                            <div className={styles.name}>{t.name}</div>\n                            <div className={styles.memberCount}>\n                                {t.members} member{t.members === 1 ? '' : 's'}\n                            </div>\n                        </div>\n                        <div>\n                            <div className={styles.points}>\n                                {t.currentPoints || 0}\n                            </div>\n                            <div>points</div>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n}\n\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport useFetch from '../hooks/useFetch';\nimport LeaderboardCards from '../components/leaderboardCard/leaderboardCards';\n\nimport LoadingAnimation from '../components/loadingAnimation/loadingAnimation';\n\nexport default function Leaderboard() {\n    const [teams, setTeams] = useState(null);\n    const { apiPostGetJsonAsTeam } = useFetch();\n\n    const fetchLeaderboardData = () => {\n        const fetchTeams = async () => {\n            const data = await apiPostGetJsonAsTeam('/ctf/teams');\n            setTeams(data.teams);\n            console.log(data.teams);\n        };\n        fetchTeams();\n    }\n\n    useEffect(() => {\n        fetchLeaderboardData();\n\n        // Specify the refresh interval in milliseconds (e.g., 10 seconds = 10000 ms)\n        const refreshInterval = setInterval(fetchLeaderboardData, 10000);\n        return () => clearInterval(refreshInterval);\n    }, []);\n\n\n    return (\n        <>\n            <h1>Leaderboard</h1>\n            {teams ? (\n                teams.length > 0 ? (\n                    <LeaderboardCards teams={teams} />\n                ) : (\n                    <>no teams have registered yet</>\n                )\n            ) : (\n                <LoadingAnimation />\n            )}\n        </>\n    );\n}\n\n","import React from 'react';\nimport LoadingAnimation from '../components/loadingAnimation/loadingAnimation';\nimport useTeam from '../hooks/useTeam';\n\nexport default function Team() {\n    const { team } = useTeam();\n    return (\n        <>\n            <h1>Your Team</h1>\n            {team ? (\n                <>\n                    <h2>Team {team.name}</h2>\n                    <ul>\n                        {team.members &&\n                            team.members.map(\n                                m => m.regNo && <li key={m.regNo}>{m.regNo}</li>\n                            )}\n                    </ul>\n                    <div>{team.currentPoints || 0} points</div>\n                </>\n            ) : (\n                <LoadingAnimation />\n            )}\n        </>\n    );\n}\n\n","import React from 'react';\nimport { useEffect } from 'react';\nimport useTeam from '../hooks/useTeam';\nimport Login from '../pages/login';\n\nexport default function LoggedInRoute({ children }) {\n    const token = window.localStorage.getItem('access-token');\n    const isPossibleValidToken = token && token.length > 0;\n    const { team, fetchTeam, logoutTeam } = useTeam();\n\n    useEffect(() => {\n        const checkTeam = async () => {\n            if (!isPossibleValidToken) logoutTeam();\n            else if (!team) await fetchTeam();\n        };\n        checkTeam();\n    }, [team]);\n\n    if (!isPossibleValidToken) return <Login />;\n    else if (!team) {\n        return <>Logging you in...</>;\n    } else return children;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { HashRouter, Routes, Route, Outlet } from \"react-router-dom\";\n\nimport \"./styles/index.css\";\nimport \"./styles/colors.css\";\nimport \"./styles/forms.css\";\n\nimport App from \"./App\";\n\nimport Landing from \"./pages/landing/landing\";\nimport Signup from \"./pages/signup/signup\";\nimport Login from \"./pages/login\";\nimport Play from \"./pages/play/play\";\nimport Leaderboard from \"./pages/leaderboard\";\nimport Team from \"./pages/team\";\nimport LoggedInRoute from \"./components/loggedInRoute\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<Landing />} />\n          <Route path=\"/signup\" element={<Signup />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route\n            path=\"/play\"\n            element={\n              <LoggedInRoute>\n                <Play />\n              </LoggedInRoute>\n            }\n          />\n          <Route\n            path=\"/leaderboard\"\n            element={\n              <LoggedInRoute>\n                <Leaderboard />\n              </LoggedInRoute>\n            }\n          />\n          <Route\n            path=\"/team\"\n            element={\n              <LoggedInRoute>\n                <Team />\n              </LoggedInRoute>\n            }\n          />\n        </Route>\n      </Routes>\n    </HashRouter>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}